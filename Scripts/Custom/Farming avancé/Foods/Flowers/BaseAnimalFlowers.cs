namespace Server.Items{	//I gave tham a long name to make sure they did not conflict with other ppls scripts	public class BaseAnimalFlowers : Item	{		public int m_BaseAnimalFlowersAmount;		[CommandProperty(AccessLevel.GameMaster)]		public int BaseAnimalFlowersAmount		{			get { return m_BaseAnimalFlowersAmount; }			set { m_BaseAnimalFlowersAmount = value; }		}		[Constructable]		public BaseAnimalFlowers()			: this(25)		{		}		//looked through insideuo I think I got the Flower ItemIds		private static int[] m_ItemIDs = new int[]		{			 0xC8B, 0xC85, 0xC8C, 0xC84, 0xC86, 0xC88, 0xCC0, 0xCBE, 0x1A99, 0x1A9A, 0x1A9B, 0x234C, 0x234D, 0x234B		};		[Constructable]		public BaseAnimalFlowers(int amount)			: base()		{			ItemID = Utility.RandomList(m_ItemIDs); 			Stackable = true;			Name = "flowers";			BaseAnimalFlowersAmount = amount;			Weight = 1.0;		}		public override bool OnDragLift(Mobile from)		{			from.SendMessage("You pull some flowers out of the ground.");			this.Consume();			return true;		}		public BaseAnimalFlowers(Serial serial)			: base(serial)		{		}		public override void Serialize(GenericWriter writer)		{			base.Serialize(writer);			writer.Write((int)0); // version			writer.Write((int)m_BaseAnimalFlowersAmount);		}		public override void Deserialize(GenericReader reader)		{			base.Deserialize(reader);			int version = reader.ReadInt();			m_BaseAnimalFlowersAmount = reader.ReadInt();		}	}}